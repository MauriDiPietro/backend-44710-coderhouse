paths:
# se va a componer de cada path que tengamos, en este caso tenemos /news solamente
  /news:
  # dentro de /news tenemos un post y un get
    post:
      tags: # con esta propiedad indicamos que pertenece a la entidad News
      - News
      summary: Registro de noticia nueva en base de datos.  # breve descripcion del endpoint
      requestBody:  # lo que pasamos por body
        content:
          application/json:
            schema: # utilizamos el schema de registro que creamos en el archivo requests
              $ref: '#/components/parameters/schemas/BodyNewsPost'
        required: true
      responses:  # indicamos que tipos de respuestas podria tener
        200:
          description: Se registró la noticia correctamente.
          content: 
            application/json:
              schema: # referenciamos el schema de respuesta que lo creamos en el archivo responses
                $ref: '#/components/schema/News/New'
        500:
          description: error del servidor.
          $ref: '#/components/schema/News/NotFound'
        404:
          description: error de validacion del body.
          $ref: '#/components/schema/News/ValidationSchemaError'
    # pasamos al endpoint gegt, que sería el get all
    get:
      tags: 
      - News
      summary: Lista de noticias en base de datos.
      responses:
        200:
          description: Lista de noticias.
          content: 
            application/json:
              schema:
                $ref: '#/components/schema/News/getAllNews'
        500:
          description: error del servidor.
          $ref: '#/components/schema/News/NotFound'
  # tenemos otro path que es /news/id
  /news/{id}:
    get:
      tags:
      - News
      summary: Listar noticias por id.
      # en este caso tenemos un parametro en la url
      parameters:
        - in: path
          name: id
          required: true
          description: id references of new.
          schema:
            type: string
      responses:
        200:
          description: Noticia encontrada.
          content:
            application/json:
              schema:
                $ref: '#/components/schema/News/New'
          404:
            description: No se encuentra noticia con id {id}
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/News/ErrorGetById'
  # /news/{id}/:
    put:
      tags:
      - News
      summary: Editar noticia
      parameters:
        - in: path
          name: id
          required: true
          description: string id required
          schema:
            type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/parameters/schemas/BodyNewsPost'
        required: true
      responses:
          200:
            description: Noticia actualizada
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/News/New'
          404:
            description: No se encuentra noticia con id {id}
            content:
              application/json:
                schema:
                  $ref: '#/components/schema/News/ErrorGetById'         
    delete:
      tags:
      - News
      summary: Eliminar noticia por id
      parameters:
        - in: path
          name: id
          required: true
          description: string id required
          schema:
            type: string
      responses:
        200:
          description: noticia eliminada
          content:
            application/json:
              schema:
                $ref: '#/components/schema/News/DeleteById'
        404:
          description: No se encuentra noticia con id {id}
          content:
            application/json:
              schema:
                $ref: '#/components/schema/News/ErrorGetById'